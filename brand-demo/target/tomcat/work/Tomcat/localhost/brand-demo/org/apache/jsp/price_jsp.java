/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2023-02-25 14:54:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class price_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <!-- bootstrap -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\r\n");
      out.write("          integrity=\"sha384-HSMxcRTRxnN+Bdg0JdbxYKrThecOKuH5zCYotlSAcp1+c8xmyTe9GYg1l9a69psu\" crossorigin=\"anonymous\">\r\n");
      out.write("    <!-- 引入 layui.css -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"//unpkg.com/layui@2.6.8/dist/css/layui.css\">\r\n");
      out.write("\r\n");
      out.write("    <!-- 引入 layui.js -->\r\n");
      out.write("    <script src=\"//unpkg.com/layui@2.6.8/dist/layui.js\"></script>\r\n");
      out.write("    <!-- echarts -->\r\n");
      out.write("    <script src=\"./src/echarts.min.js\"></script>\r\n");
      out.write("    <!-- jquery -->\r\n");
      out.write("    <script src=\"./src/jquery.min.js\"></script>\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            background-color: rgb(141, 153, 204);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #main1 {\r\n");
      out.write("            width: 680px;\r\n");
      out.write("            height: 300px;\r\n");
      out.write("            background-color: rgba(237, 229, 229, 0.5);\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            top: 10px;\r\n");
      out.write("            margin: 10px;\r\n");
      out.write("            padding-top: 20px;\r\n");
      out.write("            padding-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #main1:hover,\r\n");
      out.write("        #main2:hover,\r\n");
      out.write("        #main3:hover,\r\n");
      out.write("        #info:hover {\r\n");
      out.write("            background-color: rgba(237, 229, 229, 0.8);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #main2 {\r\n");
      out.write("            width: 680px;\r\n");
      out.write("            height: 400px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            background-color: rgba(237, 229, 229, 0.5);\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            margin: 10px;\r\n");
      out.write("            bottom: 10px;\r\n");
      out.write("            padding-top: 40px;\r\n");
      out.write("            padding-left: 30px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #main3 {\r\n");
      out.write("            width: 810px;\r\n");
      out.write("            height: 400px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            background-color: rgba(237, 229, 229, 0.5);\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            padding-top: 10px;\r\n");
      out.write("            margin-top: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .all {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-flow: row;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #info {\r\n");
      out.write("            background-color: rgba(237, 229, 229, 0.5);\r\n");
      out.write("            border-radius: 30px;\r\n");
      out.write("            width: 800px;\r\n");
      out.write("            height: 300px;\r\n");
      out.write("            position: absolute;\r\n");
      out.write("            right: 20px;\r\n");
      out.write("            bottom: 20px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-flow: row;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        span {\r\n");
      out.write("            font-weight: bolder;\r\n");
      out.write("            font-size: larger;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        ul li {\r\n");
      out.write("            line-height: 30px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            font-size: 15px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        .infol {\r\n");
      out.write("            margin-left: 10px;\r\n");
      out.write("            margin-right: 80px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"all\">\r\n");
      out.write("    <div class=\"left\">\r\n");
      out.write("        <div id=\"main1\"></div>\r\n");
      out.write("        <div id=\"main2\"></div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"right\">\r\n");
      out.write("        <div id=\"main3\"></div>\r\n");
      out.write("        <div id=\"info\">\r\n");
      out.write("            <span>最<br>新<br>消<br>息</span>\r\n");
      out.write("            <div class=\"infol\">\r\n");
      out.write("                <ul class=\"list-unstyled\" id=\"price_list\">\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("                    ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"infor\">\r\n");
      out.write("                <ul class=\"list-unstyled\" id=\"price-list\">\r\n");
      out.write("                    ");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        ");
      if (_jspx_meth_c_005fforEach_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("    var chartDom = document.getElementById('main1');\r\n");
      out.write("    var myChart = echarts.init(chartDom);\r\n");
      out.write("    console.log(myChart);\r\n");
      out.write("    var option;\r\n");
      out.write("\r\n");
      out.write("    option = {\r\n");
      out.write("        title: {\r\n");
      out.write("            text: '小麦'\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            trigger: 'axis'\r\n");
      out.write("        },\r\n");
      out.write("        legend: {\r\n");
      out.write("            data: ['Email', 'Union Ads', 'Video Ads', 'Direct', 'Search Engine']\r\n");
      out.write("        },\r\n");
      out.write("        grid: {\r\n");
      out.write("            left: '3%',\r\n");
      out.write("            right: '4%',\r\n");
      out.write("            bottom: '3%',\r\n");
      out.write("            containLabel: true\r\n");
      out.write("        },\r\n");
      out.write("        toolbox: {\r\n");
      out.write("            feature: {\r\n");
      out.write("                saveAsImage: {}\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        xAxis: {\r\n");
      out.write("            type: 'category',\r\n");
      out.write("            boundaryGap: false,\r\n");
      out.write("            data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n");
      out.write("        },\r\n");
      out.write("        yAxis: {\r\n");
      out.write("            type: 'value'\r\n");
      out.write("        },\r\n");
      out.write("        series: [\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Email',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                stack: 'Total',\r\n");
      out.write("                data: [120, 132, 101, 134, 90, 230, 210]\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Union Ads',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                stack: 'Total',\r\n");
      out.write("                data: [220, 182, 191, 234, 290, 330, 310]\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Video Ads',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                stack: 'Total',\r\n");
      out.write("                data: [150, 232, 201, 154, 190, 330, 410]\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Direct',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                stack: 'Total',\r\n");
      out.write("                data: [320, 332, 301, 334, 390, 330, 320]\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Search Engine',\r\n");
      out.write("                type: 'line',\r\n");
      out.write("                stack: 'Total',\r\n");
      out.write("                data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n");
      out.write("            }\r\n");
      out.write("        ]\r\n");
      out.write("    };\r\n");
      out.write("\r\n");
      out.write("    option && myChart.setOption(option);\r\n");
      out.write("</script>\r\n");
      out.write("<script>\r\n");
      out.write("    var chartDom = document.getElementById('main2');\r\n");
      out.write("    var myChart = echarts.init(chartDom);\r\n");
      out.write("    console.log(myChart);\r\n");
      out.write("    var option;\r\n");
      out.write("    option = {\r\n");
      out.write("        title: {\r\n");
      out.write("            text: '稻谷',\r\n");
      out.write("            subtext: 'Fake Data',\r\n");
      out.write("            left: 'center'\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            trigger: 'item'\r\n");
      out.write("        },\r\n");
      out.write("        legend: {\r\n");
      out.write("            orient: 'vertical',\r\n");
      out.write("            left: 'left'\r\n");
      out.write("        },\r\n");
      out.write("        series: [\r\n");
      out.write("            {\r\n");
      out.write("                name: 'Access From',\r\n");
      out.write("                type: 'pie',\r\n");
      out.write("                radius: '50%',\r\n");
      out.write("                data: [\r\n");
      out.write("                    { value: 1048, name: 'Search Engine' },\r\n");
      out.write("                    { value: 735, name: 'Direct' },\r\n");
      out.write("                    { value: 580, name: 'Email' },\r\n");
      out.write("                    { value: 484, name: 'Union Ads' },\r\n");
      out.write("                    { value: 300, name: 'Video Ads' }\r\n");
      out.write("                ],\r\n");
      out.write("                emphasis: {\r\n");
      out.write("                    itemStyle: {\r\n");
      out.write("                        shadowBlur: 10,\r\n");
      out.write("                        shadowOffsetX: 0,\r\n");
      out.write("                        shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        ]\r\n");
      out.write("    };\r\n");
      out.write("    option && myChart.setOption(option);\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    var dt = [\r\n");
      out.write("        { name: '芙蓉区', value: 40000.34, text: '价格：54412<br/>需求：468452.35万', selected: true },\r\n");
      out.write("        { name: '岳麓区', value: 38000, text: '价格：32412' },\r\n");
      out.write("        { name: '开福区', value: 18000, text: '价格：22412' },\r\n");
      out.write("        { name: '天心区', value: 15092, text: '价格：42412' },\r\n");
      out.write("        { name: '雨花区', value: 28000, text: '价格：52412' },\r\n");
      out.write("        { name: '望城区', value: 12000, text: '价格：72412' },\r\n");
      out.write("        { name: '长沙县', value: 32000, text: '价格：82412' },\r\n");
      out.write("        { name: '宁乡县', value: 5100, text: '价格：6412' },\r\n");
      out.write("        { name: '浏阳市', value: 2200, text: '价格：3412' },\r\n");
      out.write("        { name: '分中心', value: 4918, text: '价格：66412' }\r\n");
      out.write("\r\n");
      out.write("    ];\r\n");
      out.write("    var option = {\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        title: {\r\n");
      out.write("            text: '长沙市玉米价格',\r\n");
      out.write("            subtext: '各区县',\r\n");
      out.write("            x: 'center'\r\n");
      out.write("        },\r\n");
      out.write("        tooltip: {\r\n");
      out.write("            trigger: 'item',\r\n");
      out.write("            type: 'cross',\r\n");
      out.write("            /*   backgroundColor:\"#ff7f50\",//提示标签背景颜色\r\n");
      out.write("             textStyle:{color:\"#fff\"}, //提示标签字体颜色\r\n");
      out.write("             formatter:function(param){\r\n");
      out.write("             return dt[param.dataIndex].name + \"<br />\" +dt[param.dataIndex].text;\r\n");
      out.write("             } */\r\n");
      out.write("            alwaysShowContent: false,\r\n");
      out.write("            bordeRadius: 4,\r\n");
      out.write("            borderWidth: 1,\r\n");
      out.write("            borderColor: 'rgba(0,0,0,0.2)',\r\n");
      out.write("            backgroundColor: 'rgba(255,255,255,0.9)',\r\n");
      out.write("            padding: 0,\r\n");
      out.write("            // position: \"top\",\r\n");
      out.write("            textStyle: {\r\n");
      out.write("                fontSize: 12,\r\n");
      out.write("                color: '#333'\r\n");
      out.write("            },\r\n");
      out.write("            formatter: function (params) {\r\n");
      out.write("                var color = \"#FFB84D\";\r\n");
      out.write("                var a = \"<div style='background-color:\" + color + \";padding: 5px 10px;text-align:center;color:white;font-size: 16px;'>\" + dt[params.dataIndex].name + \"</div>\";\r\n");
      out.write("                var num = Math.ceil(params.data.name[1].length / 10);\r\n");
      out.write("                a += \"<div style='padding:3px;'>\";\r\n");
      out.write("                for (var i = 0; i < num; i++) {\r\n");
      out.write("                    a += dt[params.dataIndex].text + \"<br>\";\r\n");
      out.write("                }\r\n");
      out.write("                a += \"</div>\";\r\n");
      out.write("\r\n");
      out.write("                return a;\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        },\r\n");
      out.write("        visualMap: {\r\n");
      out.write("            min: 800,\r\n");
      out.write("            max: 50000,\r\n");
      out.write("            text: ['High', 'Low'],\r\n");
      out.write("            x: 'left',\r\n");
      out.write("            y: 'center',\r\n");
      out.write("            realtime: false,\r\n");
      out.write("            calculable: true,\r\n");
      out.write("            inRange: {\r\n");
      out.write("                color: ['lightskyblue', 'yellow', 'orangered']\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        toolbox: {\r\n");
      out.write("            show: true,\r\n");
      out.write("            orient: 'vertical',\r\n");
      out.write("            x: 'right',\r\n");
      out.write("            y: 'center',\r\n");
      out.write("            borderColor: '#FFF',       // 工具箱边框颜色\r\n");
      out.write("            borderWidth: 0,            // 工具箱边框线宽，单位px，默认为0（无边框）\r\n");
      out.write("            padding: 5,                // 工具箱内边距，单位px，默认各方向内边距为5，\r\n");
      out.write("            showTitle: false,\r\n");
      out.write("            feature: {\r\n");
      out.write("                saveAsImage: {\r\n");
      out.write("                    show: true,\r\n");
      out.write("                    title: '保存为图片',\r\n");
      out.write("                    type: 'jpeg'\r\n");
      out.write("                },\r\n");
      out.write("                restore: { show: true },\r\n");
      out.write("            }\r\n");
      out.write("        },\r\n");
      out.write("        series: [{\r\n");
      out.write("            name: '长沙',\r\n");
      out.write("            type: 'map',\r\n");
      out.write("            map: 'cs',\r\n");
      out.write("            // symbol:'../images/shine.jpg',\r\n");
      out.write("            //  symbolSize: 41,\r\n");
      out.write("            roam: true,\r\n");
      out.write("            label: {\r\n");
      out.write("                normal: {\r\n");
      out.write("                    show: true\r\n");
      out.write("                },\r\n");
      out.write("                emphasis: {\r\n");
      out.write("                    show: true\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("\r\n");
      out.write("            layoutCenter: ['50%', '50%'],   //属性定义地图中心在屏幕中的位置，一般结合layoutSize 定义地图的大小\r\n");
      out.write("            //            layoutSize: 11200,\r\n");
      out.write("            itemStyle: {\r\n");
      out.write("                normal: { label: { show: true } },\r\n");
      out.write("                emphasis: { label: { show: true } }\r\n");
      out.write("            },\r\n");
      out.write("            data: dt\r\n");
      out.write("        }]\r\n");
      out.write("    };\r\n");
      out.write("    $.get('src/cs.json', function (csJson) {\r\n");
      out.write("        echarts.registerMap('cs', csJson);\r\n");
      out.write("        var chart = echarts.init(document.getElementById('main3'));\r\n");
      out.write("        chart.setOption(option);\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- <script>\r\n");
      out.write("\r\n");
      out.write("    var chartDom = document.getElementById('main3');\r\n");
      out.write("    var myChart = echarts.init(chartDom);\r\n");
      out.write("    var option;\r\n");
      out.write("    var ROOT_PATH = 'https://echarts.apache.org/examples';\r\n");
      out.write("    myChart.showLoading();\r\n");
      out.write("    $.get(\"https://geo.datav.aliyun.com/areas_v3/bound/810000_full.json\", function (geoJson) {\r\n");
      out.write("        myChart.hideLoading();\r\n");
      out.write("        echarts.registerMap('HK', geoJson);\r\n");
      out.write("        myChart.setOption(\r\n");
      out.write("            (option = {\r\n");
      out.write("                title: {\r\n");
      out.write("                    text: 'Population Density of Hong Kong （2011）',\r\n");
      out.write("                    subtext: 'Data from Wikipedia',\r\n");
      out.write("                    sublink:\r\n");
      out.write("                        'http://zh.wikipedia.org/wiki/%E9%A6%99%E6%B8%AF%E8%A1%8C%E6%94%BF%E5%8D%80%E5%8A%83#cite_note-12'\r\n");
      out.write("                },\r\n");
      out.write("                tooltip: {\r\n");
      out.write("                    trigger: 'item',\r\n");
      out.write("                    formatter: '{b}<br/>{c} (p / km2)'\r\n");
      out.write("                },\r\n");
      out.write("                toolbox: {\r\n");
      out.write("                    show: true,\r\n");
      out.write("                    orient: 'vertical',\r\n");
      out.write("                    left: 'right',\r\n");
      out.write("                    top: 'center',\r\n");
      out.write("                    feature: {\r\n");
      out.write("                        dataView: { readOnly: false },\r\n");
      out.write("                        restore: {},\r\n");
      out.write("                        saveAsImage: {}\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                visualMap: {\r\n");
      out.write("                    min: 800,\r\n");
      out.write("                    max: 50000,\r\n");
      out.write("                    text: ['High', 'Low'],\r\n");
      out.write("                    realtime: false,\r\n");
      out.write("                    calculable: true,\r\n");
      out.write("                    inRange: {\r\n");
      out.write("                        color: ['lightskyblue', 'yellow', 'orangered']\r\n");
      out.write("                    }\r\n");
      out.write("                },\r\n");
      out.write("                series: [\r\n");
      out.write("                    {\r\n");
      out.write("                        name: '香港18区人口密度',\r\n");
      out.write("                        type: 'map',\r\n");
      out.write("                        map: 'HK',\r\n");
      out.write("                        label: {\r\n");
      out.write("                            show: true\r\n");
      out.write("                        },\r\n");
      out.write("                        data: [\r\n");
      out.write("                            { name: '中西区', value: 20057.34 },\r\n");
      out.write("                            { name: '湾仔', value: 15477.48 },\r\n");
      out.write("                            { name: '东区', value: 31686.1 },\r\n");
      out.write("                            { name: '南区', value: 6992.6 },\r\n");
      out.write("                            { name: '油尖旺', value: 44045.49 },\r\n");
      out.write("                            { name: '深水埗', value: 40689.64 },\r\n");
      out.write("                            { name: '九龙城', value: 37659.78 },\r\n");
      out.write("                            { name: '黄大仙', value: 45180.97 },\r\n");
      out.write("                            { name: '观塘', value: 55204.26 },\r\n");
      out.write("                            { name: '葵青', value: 21900.9 },\r\n");
      out.write("                            { name: '荃湾', value: 4918.26 },\r\n");
      out.write("                            { name: '屯门', value: 5881.84 },\r\n");
      out.write("                            { name: '元朗', value: 4178.01 },\r\n");
      out.write("                            { name: '北区', value: 2227.92 },\r\n");
      out.write("                            { name: '大埔', value: 2180.98 },\r\n");
      out.write("                            { name: '沙田', value: 9172.94 },\r\n");
      out.write("                            { name: '西贡', value: 3368 },\r\n");
      out.write("                            { name: '离岛', value: 806.98 }\r\n");
      out.write("                        ],\r\n");
      out.write("                        // 自定义名称映射\r\n");
      out.write("                        nameMap: {\r\n");
      out.write("                            'Central and Western': '中西区',\r\n");
      out.write("                            Eastern: '东区',\r\n");
      out.write("                            Islands: '离岛',\r\n");
      out.write("                            'Kowloon City': '九龙城',\r\n");
      out.write("                            'Kwai Tsing': '葵青',\r\n");
      out.write("                            'Kwun Tong': '观塘',\r\n");
      out.write("                            North: '北区',\r\n");
      out.write("                            'Sai Kung': '西贡',\r\n");
      out.write("                            'Sha Tin': '沙田',\r\n");
      out.write("                            'Sham Shui Po': '深水埗',\r\n");
      out.write("                            Southern: '南区',\r\n");
      out.write("                            'Tai Po': '大埔',\r\n");
      out.write("                            'Tsuen Wan': '荃湾',\r\n");
      out.write("                            'Tuen Mun': '屯门',\r\n");
      out.write("                            'Wan Chai': '湾仔',\r\n");
      out.write("                            'Wong Tai Sin': '黄大仙',\r\n");
      out.write("                            'Yau Tsim Mong': '油尖旺',\r\n");
      out.write("                            'Yuen Long': '元朗'\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                ]\r\n");
      out.write("            })\r\n");
      out.write("        );\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    option && myChart.setOption(option);\r\n");
      out.write("\r\n");
      out.write("</script> -->\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f0.setParent(null);
    // /price.jsp(151,20) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Address}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    // /price.jsp(151,20) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f0.setVar("addr");
    int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
      if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                        ");
          if (_jspx_meth_c_005fif_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
            return true;
          out.write("\r\n");
          out.write("                    ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f0.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
    // /price.jsp(152,24) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.part==1}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                            <li><a href=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.addr}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("\"\r\n");
        out.write("                                   target=\"_blank\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.theme}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("</a>\r\n");
        out.write("                            </li>\r\n");
        out.write("                        ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fforEach_005f1.setParent(null);
    // /price.jsp(188,24) name = items type = java.lang.Object reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setItems((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${Address}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
    // /price.jsp(188,24) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fforEach_005f1.setVar("addr");
    int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
    try {
      int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
      if (_jspx_eval_c_005fforEach_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                            ");
          if (_jspx_meth_c_005fif_005f1(_jspx_th_c_005fforEach_005f1, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f1))
            return true;
          out.write("\r\n");
          out.write("                        ");
          int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fforEach_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
    } catch (java.lang.Throwable _jspx_exception) {
      while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
        out = _jspx_page_context.popBody();
      _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
    } finally {
      _jspx_th_c_005fforEach_005f1.doFinally();
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f1, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f1)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f1);
    // /price.jsp(189,28) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.part==1}", java.lang.Boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("\r\n");
        out.write("                                <li><a href=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.addr}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("\"\r\n");
        out.write("                                       target=\"_blank\">");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${addr.theme}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
        out.write("</a>\r\n");
        out.write("                                </li>\r\n");
        out.write("                            ");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }
}
